# Initial Setup

Follow these steps in order to deploy from scratch.

## Traefik configuration

**If you anticipate the deployment will be unstable**, you must modify
`traefik.yaml` and uncomment the following line:

    # caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"

If you do not do this, you will almost certainly hit a rate limit on the
official LetsEncrypt servers and be unable to issue certificates for a week.

## Network setup

The following network must be created for Traefik to be able to reach all
services. It must be created externally to Docker to ensure all services can
"see" it.

    docker network create --driver overlay --scope=swarm --attachable traefik_services

## Secrets

Generate new secrets:

    ./generate-secret.sh > secrets/keycloak_admin_password.txt
    ./generate-secret.sh > secrets/keycloak_pg_password.txt
    ./generate-secret.sh > secrets/terraform_postgres_backend_password.txt
    ./generate-secret.sh > secrets/gitea_postgres_password.txt

Generate a personal access token from https://gandi.net which has permissions to
manage DNS records, and store it in `secrets/gandi_api_key.txt.`

## Deployment

    ./build-images.sh && ./deploy-stacks.sh

## Services

### Traefik

- Visit `http://localhost:8080` and log into Keycloak using the credentials
  `admin` and the password in `secrets/keycloak_admin_password.txt`
- Create a new Client in the `master` realm. Name it `terraform` - set the
  client ID to `terraform` as well. Tick "Client authentication", and untick all
  Authentication flow boxes except for "Service account roles", which should be
  ticked.
- Assign the new client the `create-realm` and `admin` Service account roles.
- Copy the client secret from the Credentials panel. Create a new `.env` file at
  `terraform/.env` with the following values, replacing the client secret as
  appropriate:

### External DNS, Keycloak and other Terraform

```
export PGUSER=terraform
export PGPASSWORD=$(cat ../secrets/terraform_postgres_backend_password.txt)
export PGSSLMODE=disable
export KEYCLOAK_CLIENT_ID=terraform
# This is pasted directly here because it is created by Keycloak rather than being managed by us.
export KEYCLOAK_CLIENT_SECRET="{{CLIENT SECRET GOES HERE}}"
export KEYCLOAK_URL=http://localhost:8080
```

- Execute `tofu apply` inside the terraform folder.

External DNS must be applied for Traefik certs to be issued. Yes, this does mean
that we have a circular reference: DNS changes need to be applied _before_
services are deployed, but in the same Terraform we have Keycloak configuration
which can only be applied _after_ services are deployed. This is something that
should be refactored. Until then, use `-target` to selectively deploy the DNS
records.

## DNS

DNS records are configured to point to `192.168.0.215` on external DNS on
aredherring.tech, but we have also configured our internal DNS at http://pi.hole
to point sso and gitea to the appropriate domains. Make sure to check
http://pi.hole if making changes to the IP address of the host machine.
