# Keycloak is in its own stack so that other services can reference it from localhost or via a domain name using the host network. Discovery becomes difficult otherwise.
version: "3.8"
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password.v1
    secrets:
      - postgres_password.v1
    networks:
      - database
    volumes:
      - postgres:/var/lib/postgresql

  keycloak:
    image: registry.aredherring.tech/keycloak:latest
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: "5432"
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD_FILE: /run/secrets/postgres_password.v1
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_HOSTNAME: sso.aredherring.tech
      KC_PROXY_HEADERS: xforwarded
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD_FILE: /run/secrets/admin_password.v1
    networks:
      - database
      - traefik
    secrets:
      - postgres_password.v1
      - admin_password.v1
    command: start-dev
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.sso.rule=Host(`sso.aredherring.tech`)
        - traefik.http.routers.sso.service=sso
        - traefik.http.routers.sso.tls.certresolver=letsencrypt
        - traefik.http.services.sso.loadbalancer.server.port=8080

secrets:
  postgres_password.v1:
    file: ./secrets/keycloak_pg_password.txt
  admin_password.v1:
    file: ./secrets/keycloak_admin_password.txt

networks:
  database: {}
  traefik:
    name: traefik_services
    external: true
  vault:
    external: true
    name: vault

volumes:
  postgres: {}
